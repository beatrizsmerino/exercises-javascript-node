1 - Implementa un sistema de rutas con llamadas Ajax y plantillas partiendo de la API de AireMAD.

- Al menos creas tres rutas /, /estacion, /estacion/:id
- La ruta /estacion y /estacion/:id deben resolverse haciendo una llamada Ajax http://airemad.com/api/v1/station/:id y pintar sus resultados haciendo uso de plantillas.
- La url debe de poder compartise, permitiendo acceder a ese estado de la aplicación.
- Debes generar un contexto común en la app (nav, footer, etc...). Solo parte del contenido es diámico
- Debes gestionar los errores 404 y similares...
- Igual es interesante preocuparnos de los posibles ataques XSS: Npm | dompurify, Npm | XSS
- Puedes usar una librería si te ayuda, como navigo



"hackear" el refesco de page.js
¿Por qué al refrescar una ruta utilizando Page.js el contenido desaparece?
https://es.stackoverflow.com/questions/3887/por-qu%C3%A9-al-refrescar-una-ruta-utilizando-page-js-el-contenido-desaparece
El ejemplo está bien. No es un fallo de page.js, sino el comportamiento normal y esperado. Cuando vas a la página principal(en la que se incluye page.js), se carga el código de page.js y se crean las diferentes rutas(que asocian las diferentes URLs con la función a ejecutar en cada caso).Ahora, cuando pulsas en alguno de los enlaces, o incluso si pulsas en los botones del historial, page.js intercepta esa solicitud y la procesa sin necesidad de que se mande al servidor, mostrando el contenido adecuado. Pero si recargas la página, page.js ya no está en control(no se ha cargado) y por lo tanto no intercepta la solicitud que esta vez sí se realiza al servidor, donde la página no se encuentra, lo que hace que el servidor devuelva un error 404(página no encontrada). El problema es que con el ejemplo de page.js sólo se están controlando el enrutamiento(routing) desde el lado del cliente, entonces cuando se recarga y es el servidor el que está en control, no sabe cómo hacerlo y falla.Una solución sería configurar el servidor para redirigir esas solicitudes a la página principal(p.e.en Apache usando.htaccess), donde page.js sí se cargará y será capaz de procesarlas correctamente.


Server configuration
Para evitar que al recargar la pagina el servidor devuelva un error, he provado a configurarlo:
- Apache -> con el archivo .htaccess no ha funcionado
- Node.js - Browsersync -> con gulpfile.js ha funcionado
He creado un task que abre un puerto del servidor y recarga la pagina cuando se edita cualquier archivo. Ademas al recargar la pagina redirege a index.html.
https://github.com/vigetlabs/blendid/issues/518
https://www.npmjs.com/package/connect-history-api-fallback
https://stackoverflow.com/questions/24999744/hbsfy-outputs-hbsfy-code-on-compile-using-gulp-browserify/25088251#25088251



Formatear las fechas con 'moment.js'
He tenido que crear una nueva fecha con new Date(dateAPI) antes de formatearla debido a que en la consola me saltaba una advertencia de que el formato que viene de la API está en desuso.
https://github.com/moment/moment/issues/1407
moment("2014-04-25T01:32:21.196Z");  // iso string, utc timezone